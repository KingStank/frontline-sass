/// URL-encode SVG code
/// @access private
/// @param {String} $string - String to encode
/// @return {String} - URL-encoded string
/// @require {variable} $fs-escape-chars
/// @require {function} fs-str-replace
///
@function fs-url-encode($string) {
  $escaped-string: '';

  // Loop through each character in string
  @for $i from 1 through str-length($string) {
    $char: str-slice($string, $i, $i);

    // Check if character is in symbol map
    $char-lookup: map-get($fs-escape-chars, $char);

    // If it is, use escaped version
    @if $char-lookup != null {
      $char: $char-lookup;
    }

    // Append character to escaped string
    $escaped-string: $escaped-string + $char;
  }

  // Return escaped string
  @return $escaped-string;
}


/// Helper to get URL-escaped inline SVG code for use with `background-image`
/// @group Main
/// @param {String} $name - Icon name
/// @return {Color} $color - Fill color
/// @require {function} fs-url-encode
/// @require {variable} $fs-svg-icons - SVG icon map
///
/// @ignore - SVG code must be escaped for older browsers (e.g. IE9)
/// @ignore - Some versions of Firefox don't like the ‚Äú#‚Äù symbol, must be also be escaped
/// @ignore - IE9+ requires height/width attributes or else background-size won't work
///
/// @link https://codepen.io/tigt/post/optimizing-svgs-in-data-uris
/// @link https://css-tricks.com/probably-dont-base64-svg/
/// @link http://stackoverflow.com/questions/21840551/background-size-with-svg-squished-in-ie9-10
/// @link http://caniuse.com/#feat=datauri
///
@function fs-svg($name, $color: false, $other: false) {
  // Check if icon exists
  @if not map-has-key($fs-svg-icons, $name) {
    @error 'üî¥  icon ‚Äú#{$name}‚Äù does not exists in $fs-svg-icons map';
    @return false;
  }

  // Get icon data
  $icon-map: map-get($fs-svg-icons, $name);
  $data: map-get($icon-map, 'data');
  $height: map-get($icon-map, 'height');
  $width: map-get($icon-map, 'width');
  $other: map-get($icon-map, 'other');

  // Fill
  $fill: '';
  @if ($color) {
    $fill: ' fill="#{$color}"';
  }

  // Other attributes
  $custom-attrs: '';
  @if ($other) {
    $custom-attrs: ' #{$other}';
  }

  // Return inline SVG data
  @return 'data:image/svg+xml,' + fs-url-encode('<svg version="1.1" baseProfile="full" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 ' + $width + ' ' + $height + '" width="' + $width + '" height="' + $height + '" preserveAspectRatio="xMidYMid meet"' + $fill + $custom-attrs + '>' + unquote($data) + '</svg>');
}
